c Random 3-SAT
c alpha=3.5, N=25, L=87, instance=4620
p cnf 25 87
9 16 14 0
-4 1 -16 0
24 -12 25 0
9 1 19 0
10 -7 18 0
19 3 -25 0
14 -9 -18 0
-19 -8 -23 0
18 8 19 0
2 23 22 0
-16 -5 6 0
-23 -4 14 0
-21 2 7 0
-24 -13 -11 0
-1 -20 2 0
-14 -11 19 0
-24 -4 23 0
25 -21 -20 0
-5 4 -17 0
-9 -5 -23 0
-3 -21 -11 0
-9 2 -3 0
-4 -10 9 0
-5 -1 -21 0
21 23 -25 0
17 -12 -10 0
16 -22 -19 0
12 -20 15 0
-23 17 -7 0
-25 -2 6 0
-2 25 16 0
18 -15 14 0
22 20 10 0
14 20 11 0
17 -1 -5 0
18 -15 13 0
21 -25 -24 0
25 -17 -19 0
-4 -9 23 0
18 -19 25 0
-3 18 -12 0
-20 -14 -23 0
25 -15 -16 0
20 10 -17 0
4 -14 -9 0
-20 -3 -6 0
2 -13 24 0
10 -9 -21 0
19 -2 -13 0
-8 23 5 0
7 19 3 0
-17 5 -10 0
1 3 11 0
-4 2 -19 0
24 -23 6 0
25 -21 6 0
19 13 18 0
19 -24 11 0
-4 -7 -15 0
-11 4 -2 0
17 -25 -8 0
20 -23 13 0
-8 -17 4 0
14 22 25 0
-9 11 3 0
1 15 23 0
23 24 10 0
18 14 -25 0
23 3 -25 0
17 14 9 0
1 11 9 0
-23 -19 11 0
2 22 3 0
-2 13 -5 0
-25 9 -3 0
-6 15 -18 0
4 -18 2 0
13 22 -4 0
14 -15 22 0
15 18 -24 0
17 7 -23 0
-7 1 5 0
12 -1 11 0
-12 23 -17 0
1 -18 10 0
5 21 9 0
-13 -18 -14 0

c GPT solve time: 107.40 seconds

SATISFIABILITY ANALYSIS (DPLL-STYLE STEP-BY-STEP SKETCH)

1) Start with all variables unassigned.  
2) Repeatedly pick an unassigned variable and assign True/False (a “branch”). After each assignment, perform unit-propagation to see if any clauses become forced or if any clause becomes unsatisfiable (a “conflict”).  
3) Whenever a conflict is detected, backtrack (increase conflict count) and flip a previous branching assignment. Continue until either:  
   • All clauses are satisfied (a complete satisfying assignment is found), or  
   • All possibilities are exhausted (the formula is unsatisfiable).  

Applying this systematically to the given formula (with 25 variables and many clauses) leads to repeated conflicts that eventually cover all possible assignments, showing no complete satisfaction is reachable. Therefore, the formula is unsatisfiable.  

UNSATISFIABLE  
Branches: 34  
Conflicts: 17