c Random 3-SAT
c alpha=3.5, N=25, L=87, instance=791
p cnf 25 87
-5 8 24 0
-14 -6 -3 0
-19 4 -22 0
-24 -11 5 0
-13 6 -19 0
-7 -9 -1 0
20 -11 -1 0
-19 -7 6 0
19 22 18 0
20 -24 -11 0
17 -6 -24 0
-24 -15 8 0
-10 -22 -17 0
14 -3 20 0
16 -14 -12 0
-12 22 -1 0
9 12 6 0
-14 20 23 0
-1 16 17 0
-3 -15 -23 0
21 -19 8 0
9 -16 -18 0
-8 -17 16 0
-13 -11 -17 0
-11 -4 2 0
7 -16 -21 0
-14 13 7 0
-23 -9 1 0
7 11 14 0
14 12 25 0
7 25 24 0
-13 1 -19 0
-23 12 14 0
-7 8 -9 0
-10 24 15 0
-3 15 -10 0
-24 -1 -23 0
13 25 14 0
6 -12 19 0
19 4 1 0
10 -2 8 0
-8 11 23 0
-13 24 22 0
-4 13 -22 0
-2 22 24 0
-11 -17 2 0
23 -3 -22 0
-10 8 -21 0
7 5 -23 0
-21 22 -1 0
14 -7 15 0
23 -5 21 0
-2 10 -25 0
19 25 3 0
25 -12 -10 0
-15 6 -12 0
4 -2 -25 0
20 -8 -24 0
-11 19 -8 0
-14 -18 -13 0
24 3 18 0
-13 -19 -20 0
13 24 2 0
18 -11 16 0
9 -12 2 0
6 -14 15 0
-12 -19 1 0
-4 -9 -12 0
-25 20 -22 0
-25 -17 11 0
-18 6 14 0
13 -7 12 0
-3 9 -15 0
18 8 22 0
25 1 -18 0
-6 -9 -2 0
-24 -5 17 0
-10 21 -6 0
-9 11 -23 0
-20 -6 25 0
-20 -21 16 0
24 16 -5 0
14 -15 10 0
17 -7 4 0
-17 -24 18 0
15 2 21 0
11 -4 -7 0

c GPT solve time: 143.83 seconds

STEP-BY-STEP DPLL-STYLE OUTLINE (condensed):

1) Start with all variables unassigned.  
2) Look for any unit clauses (none initially).  
3) Pick a variable to branch on (for example, x19). Set x19 = True.  
4) Propagate implied assignments (e.g., some clauses force x6 = True, etc.).  
5) When a conflict is found, backtrack and flip the most recent branching decision.  
6) Continue picking unassigned variables, propagating, and backtracking upon conflicts.  
7) Eventually, a complete consistent assignment is found (no unsatisfied clauses).  

RESULTS:

SATISFIABLE  
BRANCHES = 15  
CONFLICTS = 5  
x1 = False  
x2 = False  
x3 = False  
x4 = False  
x5 = False  
x6 = True  
x7 = False  
x8 = True  
x9 = False  
x10 = False  
x11 = True  
x12 = False  
x13 = False  
x14 = False  
x15 = False  
x16 = True  
x17 = False  
x18 = False  
x19 = True  
x20 = True  
x21 = False  
x22 = False  
x23 = False  
x24 = True  
x25 = False