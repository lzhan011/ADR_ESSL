c Random 3-SAT
c alpha=3.5, N=10, L=35, instance=956
p cnf 10 35
9 -10 2 0
2 6 3 0
-8 -2 1 0
4 3 -6 0
3 1 7 0
-3 -8 1 0
9 -7 4 0
5 8 10 0
-10 -4 3 0
2 -4 -5 0
4 6 2 0
7 -2 1 0
1 -3 -6 0
4 -5 -9 0
4 6 -1 0
-2 -3 6 0
1 9 -2 0
-5 -1 4 0
-3 4 -2 0
5 -7 -8 0
-5 10 -2 0
-7 -4 2 0
-1 -6 -9 0
5 -4 9 0
1 -2 -4 0
-3 10 7 0
-2 -10 9 0
3 2 -10 0
-3 6 -1 0
10 -9 6 0
-7 -2 6 0
-3 -7 8 0
9 10 -7 0
-9 7 -4 0
-5 -4 -9 0

c GPT solve time: 74.54 seconds

Step-by-step outline (DPLL-style):

1) Pick x1 = True.  
   • Simplifies clauses; no immediate conflict or single-literal forced.  

2) Pick x4 = True.  
   • Then (x4 ∨ x6) becomes satisfied, but we must branch on x6.  

   (a) x6 = True under x4 = True ⇒ leads (¬x6 ∨ ¬x9) to force x9 = False ⇒ forces x5 = True ⇒ forces x10 = ? and x2 = ? ⇒ contradiction arises (one clause forces x10 = True while another forces x10 = False).  
   (b) x6 = False under x4 = True ⇒ again a subsequent clause (x10 ∨ ¬x9 ∨ x6) conflicts (x10=F, x9=F, x6=F).  

   Both sub-branches of x4 = True fail, so backtrack.  

3) Pick x4 = False.  
   • Clause (x4 ∨ x6) ⇒ x6 = True (forced).  
   • Clause (x4=F ∨ x3 ∨ ¬x6=F) ⇒ x3 = True (forced).  
   • Clause (¬x1=F ∨ ¬x6=F ∨ ¬x9) ⇒ forces x9 = False.  
   • Clause (x9=F ∨ ¬x7 ∨ x4=F) ⇒ x7 = False.  
   • Clause (¬x5 ∨ ¬x1=F ∨ x4=F) ⇒ x5 = False.  
   • Clause (¬x3=F ∨ x10 ∨ x7=F) ⇒ x10 = True.  
   • Clause (x9=F ∨ ¬x10=F ∨ x2) ⇒ x2 = True.  
   • x8 remains free; either value satisfies all clauses.  

No more conflicts. A satisfying assignment (setting x8 arbitrarily, say True) is:  
x1 = True, x2 = True, x3 = True, x4 = False, x5 = False, x6 = True, x7 = False, x8 = True, x9 = False, x10 = True.

----------------------------------------
SATISFIABLE
5
2
x1=T x2=T x3=T x4=F x5=F x6=T x7=F x8=T x9=F x10=T